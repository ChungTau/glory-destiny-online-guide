services:
  base:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: gdo-guide-base:latest

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  prisma:
    build:
      context: .
      dockerfile: packages/prisma/Dockerfile.prisma
    volumes:
      - .:/app
      - prisma_generated:/app/packages/prisma/generated
      - /app/packages/prisma/node_modules  # 避免覆蓋本地 node_modules
    depends_on:
      base:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/mydb?schema=public
    command: >
      sh -c "while ! pg_isready -h postgres -U user -d mydb; do sleep 1; done &&
         pnpm run migrate:dev --name init && pnpm run build && pnpm run watch"

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile.dev
    volumes:
      - .:/app
      - prisma_generated:/app/packages/prisma/generated
      - /app/apps/api/node_modules  # 避免覆蓋本地 node_modules
    ports:
      - "4000:4000"
    depends_on:
      base:
        condition: service_completed_successfully
      prisma:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/mydb?schema=public
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    develop:
      watch:
        - action: sync
          path: ./apps/api/src
          target: /app/apps/api/src
        - action: sync
          path: ./packages/prisma/generated
          target: /app/packages/prisma/generated

  cms:
    build:
      context: .
      dockerfile: apps/cms/Dockerfile.dev
    volumes:
      - ./apps/cms:/app/apps/cms
      - /app/apps/cms/node_modules
      - /app/apps/cms/.next
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api:4000
    depends_on:
      base:
        condition: service_completed_successfully
      api:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: ./apps/cms/src
          target: /app/apps/cms/src
        - action: rebuild
          path: ./apps/cms/package.json

volumes:
  postgres_data:
  redis_data:
  prisma_generated: